{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\codingfiles\\\\animefy\\\\file 2472025\\\\file 2472025\\\\AnimeReact\\\\src\\\\Pages\\\\AnimePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport CharacterCard from '../components/CharacterCard';\nimport CharacterVideoList from '../components/CharacterVideoList';\nimport AnimeSource from '../data/animeSource';\nimport change_image_character from '../utils/changeCharaterImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimePage = () => {\n  _s();\n  var _AnimeSource$activeCh;\n  const [activeCharacter, setActiveCharacter] = useState(null);\n  const handlePlay = name => {\n    if (activeCharacter === name) {\n      change_image_character(name, 2); // stop\n      setActiveCharacter(null);\n    } else {\n      change_image_character(name, 1); // play\n      setActiveCharacter(name);\n    }\n  };\n  const getColorClass = name => {\n    const colors = {\n      Gojo: 'bg-blue-100',\n      Naruto: 'bg-yellow-100',\n      Tanjiro: 'bg-green-100',\n      Levi: 'bg-gray-100',\n      Asta: 'bg-purple-100',\n      Saitama: 'bg-pink-100'\n    };\n    return colors[name] || 'bg-white';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-6\",\n      children: [Object.entries(AnimeSource).map(([key, char]) => /*#__PURE__*/_jsxDEV(CharacterCard, {\n        character: {\n          name: key\n        },\n        isActive: activeCharacter === key,\n        onPlay: handlePlay\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)), activeCharacter && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"videoPlayer\",\n        className: \"mt-6\",\n        children: /*#__PURE__*/_jsxDEV(CharacterVideoList, {\n          videos: ((_AnimeSource$activeCh = AnimeSource[activeCharacter]) === null || _AnimeSource$activeCh === void 0 ? void 0 : _AnimeSource$activeCh.videos) || [],\n          color: getColorClass(activeCharacter)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimePage, \"tRwSe9RehRrNxp/WloP8WkZOylA=\");\n_c = AnimePage;\nexport default AnimePage;\nvar _c;\n$RefreshReg$(_c, \"AnimePage\");","map":{"version":3,"names":["React","useState","Navbar","CharacterCard","CharacterVideoList","AnimeSource","change_image_character","jsxDEV","_jsxDEV","AnimePage","_s","_AnimeSource$activeCh","activeCharacter","setActiveCharacter","handlePlay","name","getColorClass","colors","Gojo","Naruto","Tanjiro","Levi","Asta","Saitama","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","char","character","isActive","onPlay","id","videos","color","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/codingfiles/animefy/file 2472025/file 2472025/AnimeReact/src/Pages/AnimePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport CharacterCard from '../components/CharacterCard';\r\nimport CharacterVideoList from '../components/CharacterVideoList';\r\nimport AnimeSource from '../data/animeSource';\r\nimport change_image_character from '../utils/changeCharaterImage';\r\n\r\nconst AnimePage = () => {\r\n  const [activeCharacter, setActiveCharacter] = useState(null);\r\n\r\n  const handlePlay = (name) => {\r\n    if (activeCharacter === name) {\r\n      change_image_character(name, 2); // stop\r\n      setActiveCharacter(null);\r\n    } else {\r\n      change_image_character(name, 1); // play\r\n      setActiveCharacter(name);\r\n    }\r\n  };\r\n\r\n  const getColorClass = (name) => {\r\n    const colors = {\r\n      Gojo: 'bg-blue-100',\r\n      Naruto: 'bg-yellow-100',\r\n      Tanjiro: 'bg-green-100',\r\n      Levi: 'bg-gray-100',\r\n      Asta: 'bg-purple-100',\r\n      Saitama: 'bg-pink-100',\r\n    };\r\n    return colors[name] || 'bg-white';\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-gray-800\">\r\n      <Navbar />\r\n      <div className=\"container mx-auto px-4 py-6\">\r\n        {Object.entries(AnimeSource).map(([key, char]) => (\r\n          <CharacterCard\r\n            key={key}\r\n            character={{ name: key }}\r\n            isActive={activeCharacter === key}\r\n            onPlay={handlePlay}\r\n          />\r\n        ))}\r\n\r\n        {activeCharacter && (\r\n          <div id=\"videoPlayer\" className=\"mt-6\">\r\n            <CharacterVideoList\r\n              videos={AnimeSource[activeCharacter]?.videos || []}\r\n              color={getColorClass(activeCharacter)}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,kBAAkB,MAAM,kCAAkC;AACjE,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,sBAAsB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMa,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIH,eAAe,KAAKG,IAAI,EAAE;MAC5BT,sBAAsB,CAACS,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;MACjCF,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACLP,sBAAsB,CAACS,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;MACjCF,kBAAkB,CAACE,IAAI,CAAC;IAC1B;EACF,CAAC;EAED,MAAMC,aAAa,GAAID,IAAI,IAAK;IAC9B,MAAME,MAAM,GAAG;MACbC,IAAI,EAAE,aAAa;MACnBC,MAAM,EAAE,eAAe;MACvBC,OAAO,EAAE,cAAc;MACvBC,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAE,eAAe;MACrBC,OAAO,EAAE;IACX,CAAC;IACD,OAAON,MAAM,CAACF,IAAI,CAAC,IAAI,UAAU;EACnC,CAAC;EAED,oBACEP,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BjB,OAAA,CAACN,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA;MAAKgB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,GACzCK,MAAM,CAACC,OAAO,CAAC1B,WAAW,CAAC,CAAC2B,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,IAAI,CAAC,kBAC3C1B,OAAA,CAACL,aAAa;QAEZgC,SAAS,EAAE;UAAEpB,IAAI,EAAEkB;QAAI,CAAE;QACzBG,QAAQ,EAAExB,eAAe,KAAKqB,GAAI;QAClCI,MAAM,EAAEvB;MAAW,GAHdmB,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CACF,CAAC,EAEDjB,eAAe,iBACdJ,OAAA;QAAK8B,EAAE,EAAC,aAAa;QAACd,SAAS,EAAC,MAAM;QAAAC,QAAA,eACpCjB,OAAA,CAACJ,kBAAkB;UACjBmC,MAAM,EAAE,EAAA5B,qBAAA,GAAAN,WAAW,CAACO,eAAe,CAAC,cAAAD,qBAAA,uBAA5BA,qBAAA,CAA8B4B,MAAM,KAAI,EAAG;UACnDC,KAAK,EAAExB,aAAa,CAACJ,eAAe;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjDID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}