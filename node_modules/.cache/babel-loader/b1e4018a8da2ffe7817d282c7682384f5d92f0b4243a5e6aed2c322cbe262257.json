{"ast":null,"code":"var _jsxFileName = \"D:\\\\AnimeReact\\\\src\\\\scripts\\\\changeCharaterImage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport create_video_list from \"./getanimeData.js\";\n\n/**\r\n * CharacterImageCycler\r\n * --------------------------------------------------------------\r\n * Displays an anime character image that automatically cycles\r\n * through a predefined list of sources every 3 seconds when the\r\n * component is **active** (e.g. on hover). When inactive, the\r\n * first image is shown as the default.\r\n *\r\n * Props\r\n * -----\r\n * character : string   // key in imageSources (e.g. \"Gojo\")\r\n * color     : string   // any colour you want to forward to create_video_list\r\n * className?: string   // tailwind utility classes for outer div\r\n *\r\n * Behaviour\r\n * ---------\r\n * • On **mouseenter** → starts slideshow & calls create_video_list(character, 1, color)\r\n * • On **mouseleave** → stops slideshow   & calls create_video_list(character, 2, color)\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageSources = {\n  Gojo: [\"https://i.postimg.cc/7CRyJkw0/gojo.png\", \"images/gojo2.png\", \"https://i.postimg.cc/Yq5yKqTx/gojo3.png\"],\n  Naruto: [\"https://i.postimg.cc/Yvb7kFPX/Naruto.png\", \"images/naruto2.png\"],\n  Tanjiro: [\"https://i.postimg.cc/rdskpmXq/Tanjiro.png\", \"images/tanjiro2.png\"],\n  Levi: [\"https://i.postimg.cc/yDVKwjLg/levi.png\", \"images/levi2.png\"],\n  Asta: [\"https://i.postimg.cc/Mv0xPNmJ/Asta.png\", \"images/asta2.png\"],\n  Saitama: [\"https://i.postimg.cc/7frwNw7N/saitama.png\", \"images/saitama2.png\"]\n};\nconst CharacterImageCycler = ({\n  character,\n  color,\n  className = \"\"\n}) => {\n  _s();\n  const sources = imageSources[character] || [];\n  const [index, setIndex] = useState(0);\n  const [active, setActive] = useState(false);\n\n  // Manage the interval for image cycling\n  useEffect(() => {\n    if (!active || sources.length <= 1) return; // don't start if inactive or single image\n\n    const intervalId = setInterval(() => {\n      setIndex(prev => (prev + 1) % sources.length);\n    }, 3000);\n    return () => clearInterval(intervalId);\n  }, [active, sources.length]);\n\n  // Call create_video_list when active state changes\n  useEffect(() => {\n    if (!character) return;\n    // flag: 1 = start, 2 = stop (to mimic original function)\n    create_video_list(character, active ? 1 : 2, color);\n  }, [active, character, color]);\n\n  // Reset to first image when deactivated\n  useEffect(() => {\n    if (!active) setIndex(0);\n  }, [active]);\n\n  // Guard: no valid sources\n  if (sources.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `inline-block cursor-pointer overflow-hidden ${className}`,\n    onMouseEnter: () => setActive(true),\n    onMouseLeave: () => setActive(false),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      id: character,\n      src: sources[index],\n      className: \"transition-transform duration-300 hover:scale-105 select-none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterImageCycler, \"XClcxsyYJGhDnJ7q5TvrZYoOpzw=\");\n_c = CharacterImageCycler;\nexport default CharacterImageCycler;\nvar _c;\n$RefreshReg$(_c, \"CharacterImageCycler\");","map":{"version":3,"names":["React","useEffect","useState","create_video_list","jsxDEV","_jsxDEV","imageSources","Gojo","Naruto","Tanjiro","Levi","Asta","Saitama","CharacterImageCycler","character","color","className","_s","sources","index","setIndex","active","setActive","length","intervalId","setInterval","prev","clearInterval","onMouseEnter","onMouseLeave","children","id","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/AnimeReact/src/scripts/changeCharaterImage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport create_video_list from \"./getanimeData.js\";\r\n\r\n/**\r\n * CharacterImageCycler\r\n * --------------------------------------------------------------\r\n * Displays an anime character image that automatically cycles\r\n * through a predefined list of sources every 3 seconds when the\r\n * component is **active** (e.g. on hover). When inactive, the\r\n * first image is shown as the default.\r\n *\r\n * Props\r\n * -----\r\n * character : string   // key in imageSources (e.g. \"Gojo\")\r\n * color     : string   // any colour you want to forward to create_video_list\r\n * className?: string   // tailwind utility classes for outer div\r\n *\r\n * Behaviour\r\n * ---------\r\n * • On **mouseenter** → starts slideshow & calls create_video_list(character, 1, color)\r\n * • On **mouseleave** → stops slideshow   & calls create_video_list(character, 2, color)\r\n */\r\n\r\nconst imageSources = {\r\n  Gojo: [\r\n    \"https://i.postimg.cc/7CRyJkw0/gojo.png\",\r\n    \"images/gojo2.png\",\r\n    \"https://i.postimg.cc/Yq5yKqTx/gojo3.png\",\r\n  ],\r\n  Naruto: [\r\n    \"https://i.postimg.cc/Yvb7kFPX/Naruto.png\",\r\n    \"images/naruto2.png\",\r\n  ],\r\n  Tanjiro: [\r\n    \"https://i.postimg.cc/rdskpmXq/Tanjiro.png\",\r\n    \"images/tanjiro2.png\",\r\n  ],\r\n  Levi: [\r\n    \"https://i.postimg.cc/yDVKwjLg/levi.png\",\r\n    \"images/levi2.png\",\r\n  ],\r\n  Asta: [\r\n    \"https://i.postimg.cc/Mv0xPNmJ/Asta.png\",\r\n    \"images/asta2.png\",\r\n  ],\r\n  Saitama: [\r\n    \"https://i.postimg.cc/7frwNw7N/saitama.png\",\r\n    \"images/saitama2.png\",\r\n  ],\r\n};\r\n\r\nconst CharacterImageCycler = ({ character, color, className = \"\" }) => {\r\n  const sources = imageSources[character] || [];\r\n  const [index, setIndex] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n\r\n  // Manage the interval for image cycling\r\n  useEffect(() => {\r\n    if (!active || sources.length <= 1) return; // don't start if inactive or single image\r\n\r\n    const intervalId = setInterval(() => {\r\n      setIndex((prev) => (prev + 1) % sources.length);\r\n    }, 3000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [active, sources.length]);\r\n\r\n  // Call create_video_list when active state changes\r\n  useEffect(() => {\r\n    if (!character) return;\r\n    // flag: 1 = start, 2 = stop (to mimic original function)\r\n    create_video_list(character, active ? 1 : 2, color);\r\n  }, [active, character, color]);\r\n\r\n  // Reset to first image when deactivated\r\n  useEffect(() => {\r\n    if (!active) setIndex(0);\r\n  }, [active]);\r\n\r\n  // Guard: no valid sources\r\n  if (sources.length === 0) return null;\r\n\r\n  return (\r\n    <div\r\n      className={`inline-block cursor-pointer overflow-hidden ${className}`}\r\n      onMouseEnter={() => setActive(true)}\r\n      onMouseLeave={() => setActive(false)}\r\n    >\r\n      {/* eslint-disable-next-line jsx-a11y/alt-text */}\r\n      <img\r\n        id={character}\r\n        src={sources[index]}\r\n        className=\"transition-transform duration-300 hover:scale-105 select-none\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterImageCycler;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}