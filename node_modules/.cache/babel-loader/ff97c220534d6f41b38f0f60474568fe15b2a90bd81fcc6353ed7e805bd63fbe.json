{"ast":null,"code":"// import React, { useState } from 'react';\n// import Navbar from '../components/Navbar';\n// import CharacterCard from '../components/CharacterCard';\n// import VideoPlayer from '../components/VideoPlayer';\n// import change_image_character from '../utils/changeCharaterImage';\n// import characters from '../data/characterData';\n// import CharacterVideoList from '../components/CharacterVideoList';\n\n// const AnimePage = () => {\n//   const [activeCharacter, setActiveCharacter] = useState(null);\n\n//   const handlePlay = (name) => {\n//     if (activeCharacter === name) {\n//       console.log(name)\n//       console.log(\"this is active character \"+activeCharacter)\n//       change_image_character(name, 2); // stop\n//       setActiveCharacter(null);\n//     } else {\n//             console.log(name)\n//             console.log(activeCharacter)\n//       change_image_character(name, 1); // play\n//       setActiveCharacter(name);\n//     }\n//   };\n\n//   const getVideoId = (characterName) => {\n//     const found = characters.find(c => c.name === characterName);\n//     return found ? found.videoId : '';\n//   };\n\n//   return (\n//     <div className=\"text-gray-800\">\n//       <Navbar />\n//       <div className=\"container w-full mx-auto px-4 py-6\">\n//        {characters.map((char) => {\n//   if (activeCharacter && activeCharacter !== char.name) return null;\n\n//   return (\n//     <CharacterCard\n//       key={char.name}\n//       character={char}\n//       onPlay={handlePlay}\n//       isActive={activeCharacter === char.name}\n//     />\n\n//   );\n\n// })}\n//         {/* <CharacterVideoList character={activeCharacter} />  */}\n//         <VideoPlayer character={activeCharacter} characterId={getVideoId(activeCharacter)} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AnimePage;","map":{"version":3,"names":[],"sources":["D:/ANimeReactProject/AnimeReact/AnimeReact/src/Pages/AnimePage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Navbar from '../components/Navbar';\r\n// import CharacterCard from '../components/CharacterCard';\r\n// import VideoPlayer from '../components/VideoPlayer';\r\n// import change_image_character from '../utils/changeCharaterImage';\r\n// import characters from '../data/characterData';\r\n// import CharacterVideoList from '../components/CharacterVideoList';\r\n\r\n// const AnimePage = () => {\r\n//   const [activeCharacter, setActiveCharacter] = useState(null);\r\n\r\n//   const handlePlay = (name) => {\r\n//     if (activeCharacter === name) {\r\n//       console.log(name)\r\n//       console.log(\"this is active character \"+activeCharacter)\r\n//       change_image_character(name, 2); // stop\r\n//       setActiveCharacter(null);\r\n//     } else {\r\n//             console.log(name)\r\n//             console.log(activeCharacter)\r\n//       change_image_character(name, 1); // play\r\n//       setActiveCharacter(name);\r\n//     }\r\n//   };\r\n\r\n//   const getVideoId = (characterName) => {\r\n//     const found = characters.find(c => c.name === characterName);\r\n//     return found ? found.videoId : '';\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"text-gray-800\">\r\n//       <Navbar />\r\n//       <div className=\"container w-full mx-auto px-4 py-6\">\r\n//        {characters.map((char) => {\r\n//   if (activeCharacter && activeCharacter !== char.name) return null;\r\n\r\n//   return (\r\n//     <CharacterCard\r\n//       key={char.name}\r\n//       character={char}\r\n//       onPlay={handlePlay}\r\n//       isActive={activeCharacter === char.name}\r\n//     />\r\n \r\n\r\n\r\n//   );\r\n\r\n  \r\n// })}\r\n//         {/* <CharacterVideoList character={activeCharacter} />  */}\r\n//         <VideoPlayer character={activeCharacter} characterId={getVideoId(activeCharacter)} />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AnimePage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}